# âœ… FIXED - SCENARIO 2: POOL CONFIGURATION ERRORS
# Fixes: Valid pool syntax, correct agent selection, proper resource allocation

# Fixed: Standard trigger structure (no changes needed from error file)
trigger:
  branches:
    include:
      - main
      - develop

# Fixed: Standard PR structure (no changes needed from error file)
pr:
  branches:
    include:
      - develop

# Fixed: Use valid pool name instead of deprecated vmImage (fixes agent discovery failures)
pool:
  name: 'Default'

# Fixed: Standard variables (no changes needed from error file)
variables:
  buildConfiguration: 'Release'
  testProjectPath: 'test-project'

# Fixed: Proper job structure with correct pool usage (fixes agent assignment and resource issues)
jobs:
  - job: Build
    displayName: 'Build with Deprecated Pool'
    steps:
      # Fixed: Use current task versions (@2 instead of deprecated @1, fixes compatibility issues)
      - task: UseDotNet@2
        displayName: 'Install .NET SDK'
        inputs:
          version: '6.x'

      - task: DotNetCoreCLI@2
        displayName: 'Restore NuGet packages'
        inputs:
          command: 'restore'
          projects: '$(testProjectPath)/*.csproj'

      - task: DotNetCoreCLI@2
        displayName: 'Build application'
        inputs:
          command: 'build'
          projects: '$(testProjectPath)/BuildTestApp.csproj'
          arguments: '--configuration $(buildConfiguration)'

      - task: DotNetCoreCLI@2
        displayName: 'Run application tests'
        inputs:
          command: 'run'
          projects: '$(testProjectPath)/BuildTestApp.csproj'
          arguments: '--configuration $(buildConfiguration)'

  # Fixed: Correct job dependencies and artifact publishing (fixes missing publish steps and wrong task versions)
  - job: PublishArtifact
    displayName: 'Publish Artifacts'
    dependsOn: Build
    condition: succeeded()
    steps:
      - task: DotNetCoreCLI@2
        displayName: 'Publish application'
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '$(testProjectPath)/BuildTestApp.csproj'
          arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
          zipAfterPublish: false

      - task: PublishBuildArtifacts@1
        displayName: 'Upload artifacts'
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'