# âœ… FIXED - SCENARIO 4: TASK DEPENDENCY & INPUT ERRORS
# Fixes: Complete task inputs, correct job dependencies, proper task versions

# Fixed: Standard trigger structure (no changes needed from error file)
trigger:
  branches:
    include:
      - main
      - develop

# Fixed: Standard PR structure (no changes needed from error file)
pr:
  branches:
    include:
      - develop

# Fixed: Standard pool (no changes needed from error file)
pool:
  name: 'Default'

# Fixed: Standard variables (no changes needed from error file)
variables:
  buildConfiguration: 'Release'
  testProjectPath: 'test-project'

# Fixed: Proper job structure with correct dependencies and task configurations (fixes missing inputs and wrong names)
jobs:
  - job: BuildJob
    displayName: 'Build Application'
    steps:
      # Fixed: Complete task inputs with all required fields (fixes missing version and inputs)
      - task: UseDotNet@2
        displayName: 'Install .NET SDK'
        inputs:
          version: '6.x'

      - task: DotNetCoreCLI@2
        displayName: 'Restore packages'
        inputs:
          command: 'restore'
          projects: '$(testProjectPath)/*.csproj'

      - task: DotNetCoreCLI@2
        displayName: 'Build'
        inputs:
          command: 'build'
          projects: '$(testProjectPath)/BuildTestApp.csproj'
          arguments: '--configuration $(buildConfiguration)'

      # Fixed: Add missing inputs and correct task configuration (fixes incomplete test task)
      - task: DotNetCoreCLI@2
        displayName: 'Run Tests'
        inputs:
          command: 'test'
          projects: '$(testProjectPath)/*Tests.csproj'
          arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage"'
          publishTestResults: true

      - task: DotNetCoreCLI@2
        displayName: 'Run application tests'
        inputs:
          command: 'run'
          projects: '$(testProjectPath)/BuildTestApp.csproj'

  # Fixed: Correct job dependencies and conditions (fixes wrong dependsOn names and missing conditions)
  - job: PublishJob
    displayName: 'Publish Artifacts'
    dependsOn: BuildJob
    condition: succeeded()
    steps:
      - task: DotNetCoreCLI@2
        displayName: 'Publish'
        inputs:
          command: 'publish'
          projects: '$(testProjectPath)/BuildTestApp.csproj'

      - task: PublishBuildArtifacts@1
        displayName: 'Upload'
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'

  # Fixed: Proper multi-job dependencies and conditions (fixes wrong job names and condition syntax)
  - job: DeployJob
    displayName: 'Deploy Application'
    dependsOn:
      - BuildJob
      - PublishJob
    condition: and(succeeded('BuildJob'), succeeded('PublishJob'))
    steps:
      - task: DownloadBuildArtifacts@0
        displayName: 'Download Artifacts'
        inputs:
          artifactName: 'drop'

      - script: |
          echo "Simulating deployment to Azure Web App..."
          echo "App Name: myapp-prod"
          echo "Subscription: ADO_Readiness"
          echo "Deployment complete (simulated)"
        displayName: 'Simulate Azure Deployment'