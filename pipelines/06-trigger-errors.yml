# âœ… FIXED - SCENARIO 5: TRIGGER & CONDITION CONFIGURATION ERRORS SOLUTION
# Fixes: Proper trigger syntax, resolved conflicts, correct conditions

# Fixed: Use branches block for CI triggers (allows includes/excludes, fixes simple list error)
trigger:
  branches:
    include:
      - main
      - develop

# Fixed: PR triggers require branches block (fixes invalid list/mapping mix)
pr:
  branches:
    include:
      - develop

# Fixed: Removed conflicting branch filters in schedules (include/exclude same branch invalid)
# Uncomment to enable scheduled builds
# schedules:
#   - cron: "0 2 * * 1-5"
#     displayName: 'Daily build'
#     branches:
#       include:
#         - main
#       exclude:
#         - main
#     always: true

# Fixed: Use $[ ] for compile-time expressions (fixes runtime variable syntax)
variables:
  isMainBranch: $[eq(variables.Build.SourceBranch, 'refs/heads/main')]
  buildConfig: 'Release'
  testProjectPath: 'test-project'

jobs:
  # Fixed: Boolean true in conditions (fixes string 'true' comparison)
  - job: MainBuild
    displayName: 'Build on Main'
    condition: and(succeeded(), eq(variables.isMainBranch, true))
    steps:
      - task: UseDotNet@2
        displayName: 'Install .NET'
        inputs:
          version: '6.x'

      - task: DotNetCoreCLI@2
        displayName: 'Restore packages'
        inputs:
          command: 'restore'
          projects: '$(testProjectPath)/*.csproj'

      - task: DotNetCoreCLI@2
        displayName: 'Build'
        inputs:
          command: 'build'
          projects: '$(testProjectPath)/BuildTestApp.csproj'
          arguments: '--configuration $(buildConfig)'

      - task: DotNetCoreCLI@2
        displayName: 'Run application tests'
        inputs:
          command: 'run'
          projects: '$(testProjectPath)/BuildTestApp.csproj'

  # Fixed: Proper variable syntax with quotes (fixes missing quotes error)
  - job: FeatureBuild
    displayName: 'Build on Feature Branch'
    condition: ne(variables['Build.SourceBranch'], 'refs/heads/main')
    steps:
      - script: echo "Feature branch build"

  # Fixed: Correct job names in dependsOn/condition (fixes 'WrongJobName' typo)
  - job: DeployMain
    displayName: 'Deploy to Production'
    dependsOn:
      - MainBuild
      - FeatureBuild
    condition: and(succeeded('MainBuild'), failed('FeatureBuild'))
    steps:
      - script: echo "Deploying to production"

  - job: NotifyCompletion
    displayName: 'Notify Completion'
    dependsOn:
      - MainBuild
      - FeatureBuild
      - DeployMain
    condition: always()
    steps:
      - script: echo "Pipeline completed success=$(Agent.JobStatus)"